# Generated by Selenium IDE

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.select import Select
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

# Justin Wheeler (100982020)

class TestNewAccount():
    def setup_method(self, method):
        self.driver = webdriver.Firefox()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_emptyAccNo(self):
        self.driver.get("https://demo.guru99.com/V4/manager/Managerhomepage.php")
        self.driver.set_window_size(1597, 1009)
        self.driver.find_element(By.LINK_TEXT, "Edit Account").click()
        self.driver.find_element(By.NAME, "accountno").click()
        self.driver.find_element(By.NAME, "accountno").send_keys(Keys.TAB)
        element = self.driver.find_element(By.XPATH, "//label[@id='message2']")
        assert element.is_displayed()
        assert element.text == "Account Number must not be empty"

    def test_nonNumericAccNo(self):
        self.driver.get("https://demo.guru99.com/V4/manager/Managerhomepage.php")
        self.driver.set_window_size(1597, 1009)
        self.driver.find_element(By.LINK_TEXT, "Edit Account").click()
        self.driver.find_element(By.NAME, "accountno").click()
        self.driver.find_element(By.NAME, "accountno").send_keys("Acc123")
        element = self.driver.find_element(By.XPATH, "//label[@id='message2']")
        assert element.is_displayed()
        assert element.text == "Characters are not allowed"

    def test_specialCharAccNo(self):
        self.driver.get("https://demo.guru99.com/V4/manager/Managerhomepage.php")
        self.driver.set_window_size(1597, 1009)
        self.driver.find_element(By.LINK_TEXT, "Edit Account").click()
        self.driver.find_element(By.NAME, "accountno").click()
        self.driver.find_element(By.NAME, "accountno").send_keys("123!@#")
        element = self.driver.find_element(By.XPATH, "//label[@id='message2']")
        assert element.is_displayed()
        assert element.text == "Special characters are not allowed"

    def test_blankSpaceAccNo(self):
        self.driver.get("https://demo.guru99.com/V4/manager/Managerhomepage.php")
        self.driver.set_window_size(1597, 1009)
        self.driver.find_element(By.LINK_TEXT, "Edit Account").click()
        self.driver.find_element(By.NAME, "accountno").click()
        self.driver.find_element(By.NAME, "accountno").send_keys("123 12")
        self.driver.find_element(By.NAME, "accountno").send_keys(Keys.TAB)
        element = self.driver.find_element(By.XPATH, "//label[@id='message2']")
        assert element.is_displayed()
        assert element.text == "Characters are not allowed"

    def test_firstSpaceAccNo(self):
        self.driver.get("https://demo.guru99.com/V4/manager/Managerhomepage.php")
        self.driver.set_window_size(1597, 1009)
        self.driver.find_element(By.LINK_TEXT, "Edit Account").click()
        self.driver.find_element(By.NAME, "accountno").click()
        self.driver.find_element(By.NAME, "accountno").send_keys(" ")
        self.driver.find_element(By.NAME, "accountno").send_keys(Keys.TAB)
        element = self.driver.find_element(By.XPATH, "//label[@id='message2']")
        assert element.is_displayed()
        assert element.text == "First character cannot have space"

    def test_validAccNo(self):
        self.driver.get("https://demo.guru99.com/V4")
        self.driver.set_window_size(1597, 1009)

        self.driver.find_element(By.NAME, "uid").click()
        self.driver.find_element(By.NAME, "uid").send_keys("mngr618468")
        self.driver.find_element(By.NAME, "password").click()
        self.driver.find_element(By.NAME, "password").send_keys("rYsapan")
        self.driver.find_element(By.NAME, "btnLogin").click()
        time.sleep(1)

        self.driver.find_element(By.LINK_TEXT, "New Account").click()
        self.driver.find_element(By.NAME, "cusid").click()
        self.driver.find_element(By.NAME, "cusid").send_keys("34967")
        self.driver.find_element(By.NAME, "inideposit").click()
        self.driver.find_element(By.NAME, "inideposit").send_keys("9999")
        self.driver.find_element(By.NAME, "button2").click()
        time.sleep(1)

        customerID = self.driver.find_element(By.CSS_SELECTOR, "tbody tr:nth-child(4) td:nth-child(2)").text
        self.driver.find_element(By.LINK_TEXT, "Edit Account").click()
        time.sleep(1)

        self.driver.find_element(By.NAME, "accountno").click()
        self.driver.find_element(By.NAME, "accountno").send_keys(customerID)
        self.driver.find_element(By.NAME, "AccSubmit").click()

    def test_invalidAccNo(self):
        self.driver.get("https://demo.guru99.com/V4/manager/Managerhomepage.php")
        self.driver.set_window_size(1597, 1009)
        self.driver.find_element(By.LINK_TEXT, "Edit Account").click()
        self.driver.find_element(By.NAME, "accountno").click()
        self.driver.find_element(By.NAME, "accountno").send_keys("12345")
        self.driver.find_element(By.NAME, "AccSubmit").click()
        assert self.driver.switch_to.alert.text == "Account does not exist"

    def test_resetAccNo(self):
        self.driver.get("https://demo.guru99.com/V4/manager/Managerhomepage.php")
        self.driver.set_window_size(1597, 1009)
        self.driver.find_element(By.LINK_TEXT, "Edit Account").click()
        self.driver.find_element(By.NAME, "accountno").click()
        self.driver.find_element(By.NAME, "accountno").send_keys("123456")
        self.driver.find_element(By.NAME, "res").click()
        element = self.driver.find_element(By.NAME, "accountno")
        assert element.get_attribute("Value") is None











